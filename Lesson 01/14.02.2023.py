# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит 
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод:
# 7 3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

# import random 

# def create_random_list(x):
#     list1 = [random.randint(1,20) for i in range (x)]
#     return list1

# n = int(input('Введите размер списка: '))
# m = int(input('Введите размер списка: '))
# array1 = create_random_list(n)
# array2 = create_random_list(m)
# print(array1)
# print(array2)
 
# array3 = []
# def merge_without_repeat(array1,array2):
#     for i in array1:
#         if i not in array2:
#             array3.append(i)
#     return array3

# # merge = merge_without_repeat(array1,array2)
# print(merge_without_repeat(array1,array2))

# Решение группы
# list1 = [int(input(f'Введите {i + 1}-е число: ')) for i in range(int(input('Введите количество элементов первого массива: ')))]
# list2 = [int(input(f'Введите {j + 1}-е число: ')) for j in range(int(input('Введите количество элементов второго массива: ')))]
# new_list = [el if el not in list2 else 0 for el in list1 ] 
# print(new_list)

# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве 
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод: Ввод:
# 5 5
# 1 2 3 4 5 1 5 1 5 1
# Вывод: Вывод:
# 0 2
# (каждое число вводится с новой строки)

# first_n = int(input('Введите кол-во элементов первого набора чисел:'))
# list1 = [int(input(f'Введите {i+1} элемент первого набора: ')) for i in range(first_n)]
# from random import randint
# list1 = [randint(0, 10) for i in range(10)]
# print(list1)

# count = 0
# for i in range(1,len(list1)-1):
#     if list1[i] > list1[i-1] and list1[i] > list1[i+1]:
#             # arr[i-1] < arr[i] > arr[i+1] можно так записать
#         count += 1
# print(count)

# # Решение через ЛИСТ КОРПЕНСЕЙШЕНС...
# res_array = [1 for i in range(1,len(list1)-1) if list1[i-1]<list1[i]>list1[i+1]]
# print(len(res_array))

# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:       Вывод:
# 1 2 3 2 3     2

# from random import randint
# arr=[randint(0, 10) for i in range(5)]
# # n=len(arr)
# result=0
# for i in range(len(arr)-1):
#     for j in range(i+1,len(arr)):
#         if arr[i]==arr[j]:
#             result+=1

# print(f'{arr} \n'
#       f'Кол-во парных элементов списка = {result}')

# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не превосходящее 105.Программа должна вывести все
# пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод: Вывод:
# 300 220 284

k = 50
res = []
sum1 = 0
for i in range (1,k):
    for j in range(1,k):
        while sum1 < k:
            if i % j == 0:
                sum1 += j
                if sum1 % i == 0:
                    res.append(i)
                res.append(sum1)
print(res)

